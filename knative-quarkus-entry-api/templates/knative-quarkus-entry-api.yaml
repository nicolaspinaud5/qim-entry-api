apiVersion: v1
kind: Pod
metadata:
  annotations:
    client.knative.dev/updateTimestamp: '2023-10-24T11:56:20Z'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "openshift-sdn",
          "interface": "eth0",
          "ips": [
              "10.131.10.249"
          ],
          "default": true,
          "dns": {}
      }]
    kubernetes.io/limit-ranger: >-
      LimitRanger plugin set: cpu request for container quarkus-entry-api; cpu
      limit for container quarkus-entry-api; memory request for container
      queue-proxy; cpu, memory limit for container queue-proxy
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    serving.knative.dev/creator: npinaudswiss
  labels:
    app: quarkus-entry-api-00002
    pod-template-hash: d9d7d5664
    serving.knative.dev/configuration: quarkus-entry-api
    serving.knative.dev/configurationGeneration: '2'
    serving.knative.dev/configurationUID: e850aeeb-9cf6-4916-91cb-d06b3333ec2e
    serving.knative.dev/revision: quarkus-entry-api-00002
    serving.knative.dev/revisionUID: d27d5dbd-0bc4-4014-84eb-b7087d4436d8
    serving.knative.dev/service: quarkus-entry-api
    serving.knative.dev/serviceUID: 923112fe-cc95-4653-94a4-4408ac5d04c2
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  name: {{ template "fullname" . }}
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: quarkus-entry-api-00002-deployment-d9d7d5664
      uid: 515ee223-493d-4579-b981-c35479e8fcfb
spec:
  containers:
    - env:
        - name: mongodb-user
          value: root
        - name: mongodb-password
          value: qiminfo
        - name: MONGO_SERVICE_HOST
          value: 172.30.38.223
        - name: MONGO_SERVICE_PORT
          value: '27017'
        - name: PORT
          value: '8080'
        - name: K_REVISION
          value: quarkus-entry-api-00002
        - name: K_CONFIGURATION
          value: quarkus-entry-api
        - name: K_SERVICE
          value: quarkus-entry-api
      image: >-
        image-registry.openshift-image-registry.svc:5000/npinaudswiss-dev/quarkus-entry-api@sha256:851710bb0a3edc08f3f0f5e4999e76607efea909bf0450ac6ef454e9fc04ecbb
      imagePullPolicy: Always
      lifecycle:
        preStop:
          httpGet:
            path: /wait-for-drain
            port: 8022
            scheme: HTTP
      livenessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: K-Kubelet-Probe
              value: queue
          path: /q/health/live
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: quarkus-entry-api
      ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
      resources:
        limits:
          cpu: '1'
          memory: 120Mi
        requests:
          cpu: 10m
          memory: 120Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        runAsNonRoot: true
        runAsUser: 1002770000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-5bwbq
          readOnly: true
    - env:
        - name: SERVING_NAMESPACE
          value: npinaudswiss-dev
        - name: SERVING_SERVICE
          value: quarkus-entry-api
        - name: SERVING_CONFIGURATION
          value: quarkus-entry-api
        - name: SERVING_REVISION
          value: quarkus-entry-api-00002
        - name: QUEUE_SERVING_PORT
          value: '8012'
        - name: QUEUE_SERVING_TLS_PORT
          value: '8112'
        - name: CONTAINER_CONCURRENCY
          value: '0'
        - name: REVISION_TIMEOUT_SECONDS
          value: '300'
        - name: SERVING_POD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SERVING_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVING_LOGGING_CONFIG
        - name: SERVING_LOGGING_LEVEL
        - name: SERVING_REQUEST_LOG_TEMPLATE
          value: >-
            {"httpRequest": {"requestMethod": "{{.Request.Method}}",
            "requestUrl": "{{js .Request.RequestURI}}", "requestSize":
            "{{.Request.ContentLength}}", "status": {{.Response.Code}},
            "responseSize": "{{.Response.Size}}", "userAgent": "{{js
            .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}",
            "serverIp": "{{.Revision.PodIP}}", "referer": "{{js
            .Request.Referer}}", "latency": "{{.Response.Latency}}s",
            "protocol": "{{.Request.Proto}}"}, "traceId": "{{index
            .Request.Header "X-B3-Traceid"}}"}
        - name: SERVING_ENABLE_REQUEST_LOG
          value: 'false'
        - name: SERVING_REQUEST_METRICS_BACKEND
          value: prometheus
        - name: TRACING_CONFIG_BACKEND
          value: none
        - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
        - name: TRACING_CONFIG_DEBUG
          value: 'false'
        - name: TRACING_CONFIG_SAMPLE_RATE
          value: '0.1'
        - name: USER_PORT
          value: '8080'
        - name: SYSTEM_NAMESPACE
          value: knative-serving
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: SERVING_READINESS_PROBE
          value: >-
            {"httpGet":{"path":"/q/health/ready","port":8080,"host":"127.0.0.1","scheme":"HTTP","httpHeaders":[{"name":"K-Kubelet-Probe","value":"queue"}]},"initialDelaySeconds":5,"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3}
        - name: ENABLE_PROFILING
          value: 'false'
        - name: SERVING_ENABLE_PROBE_REQUEST_LOG
          value: 'false'
        - name: METRICS_COLLECTOR_ADDRESS
        - name: CONCURRENCY_STATE_ENDPOINT
        - name: CONCURRENCY_STATE_TOKEN_PATH
          value: /var/run/secrets/tokens/state-token
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_HTTP2_AUTO_DETECTION
          value: 'false'
      image: >-
        registry.redhat.io/openshift-serverless-1/serving-queue-rhel8@sha256:8c34803cb97f69f51d92987f06ffcf14c4bd5f47a81b7fb3f6d9d11eba0bba96
      imagePullPolicy: IfNotPresent
      name: queue-proxy
      ports:
        - containerPort: 8022
          name: http-queueadm
          protocol: TCP
        - containerPort: 9090
          name: http-autometric
          protocol: TCP
        - containerPort: 9091
          name: http-usermetric
          protocol: TCP
        - containerPort: 8012
          name: queue-port
          protocol: TCP
        - containerPort: 8112
          name: https-port
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: K-Network-Probe
              value: queue
          path: /
          port: 8012
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: '1'
          memory: 1000Mi
        requests:
          cpu: 25m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1002770000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-5bwbq
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  imagePullSecrets:
    - name: quarkus-entry-api-dockercfg-sbcks
  nodeName: ip-10-0-141-54.us-east-2.compute.internal
  preemptionPolicy: PreemptLowerPriority
  priority: -3
  priorityClassName: sandbox-users-pods
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1002770000
    seLinuxOptions:
      level: 's0:c53,c7'
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: quarkus-entry-api
  serviceAccountName: quarkus-entry-api
  terminationGracePeriodSeconds: 300
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
  volumes:
    - name: kube-api-access-5bwbq
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
          - configMap:
              items:
                - key: service-ca.crt
                  path: service-ca.crt
              name: openshift-service-ca.crt
